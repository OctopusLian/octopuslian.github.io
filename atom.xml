<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>不会飞的章鱼</title>
  <icon>https://octopuslian.github.io/icon.png</icon>
  <subtitle>熟能生巧，勤能补拙；念念不忘，必有回响。</subtitle>
  <link href="https://octopuslian.github.io/atom.xml" rel="self"/>
  
  <link href="https://octopuslian.github.io/"/>
  <updated>2023-07-25T03:09:48.046Z</updated>
  <id>https://octopuslian.github.io/</id>
  
  <author>
    <name>Neo Zhang</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>程前朋友圈：程序员的一天是怎么样的？</title>
    <link href="https://octopuslian.github.io/2023/07/25/chengqian-programmer-a-day/"/>
    <id>https://octopuslian.github.io/2023/07/25/chengqian-programmer-a-day/</id>
    <published>2023-07-25T02:47:10.000Z</published>
    <updated>2023-07-25T03:09:48.046Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h1&gt;&lt;p&gt;采访了一位哈尔滨工业大学毕业的程序员，在上海工作三年，与两位合伙人一起创业做了一个长达十年的项目，有着十几个人的公司，年收入300~400万，相对来说算成功。&lt;/p&gt;
&lt;h1 id=&quot;采访&quot;&gt;&lt;a href=&quot;#采访&quot; class=&quot;headerlink&quot; title=&quot;采访&quot;&gt;&lt;/a&gt;采访&lt;/h1&gt;&lt;h2 id=&quot;你觉得你处在这个年龄层的程序员里面算什么水平？&quot;&gt;&lt;a href=&quot;#你觉得你处在这个年龄层的程序员里面算什么水平？&quot; class=&quot;headerlink&quot; title=&quot;你觉得你处在这个年龄层的程序员里面算什么水平？&quot;&gt;&lt;/a&gt;你觉得你处在这个年龄层的程序员里面算什么水平？&lt;/h2&gt;&lt;p&gt;中等吧，顶多能算中等。&lt;/p&gt;</summary>
    
    
    
    <category term="Essay" scheme="https://octopuslian.github.io/categories/Essay/"/>
    
    
    <category term="程前朋友圈" scheme="https://octopuslian.github.io/tags/%E7%A8%8B%E5%89%8D%E6%9C%8B%E5%8F%8B%E5%9C%88/"/>
    
    <category term="采访" scheme="https://octopuslian.github.io/tags/%E9%87%87%E8%AE%BF/"/>
    
    <category term="程序员" scheme="https://octopuslian.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装 Kubernetes</title>
    <link href="https://octopuslian.github.io/2023/07/20/mac-install-kubernetes/"/>
    <id>https://octopuslian.github.io/2023/07/20/mac-install-kubernetes/</id>
    <published>2023-07-20T05:49:08.000Z</published>
    <updated>2023-07-23T06:42:41.172Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;首先安装Docker-for-Mac&quot;&gt;&lt;a href=&quot;#首先安装Docker-for-Mac&quot; class=&quot;headerlink&quot; title=&quot;首先安装Docker for Mac&quot;&gt;&lt;/a&gt;首先安装Docker for Mac&lt;/h1&gt;&lt;h1 id=&quot;Enable-Kubernetes&quot;&gt;&lt;a href=&quot;#Enable-Kubernetes&quot; class=&quot;headerlink&quot; title=&quot;Enable Kubernetes&quot;&gt;&lt;/a&gt;Enable Kubernetes&lt;/h1&gt;&lt;p&gt;设置里打开Kubernetes，下载会持续一段时间：&lt;br&gt;&lt;img src=&quot;/2023/07/20/mac-install-kubernetes/enable-k8s.png&quot;&gt;  &lt;/p&gt;
&lt;h1 id=&quot;验证&quot;&gt;&lt;a href=&quot;#验证&quot; class=&quot;headerlink&quot; title=&quot;验证&quot;&gt;&lt;/a&gt;验证&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;~  kubectl get nodes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME             STATUS   ROLES           AGE   VERSION&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-desktop   Ready    control-plane   46h   v1.27.2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;~  kubectl get ns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAME              STATUS   AGE&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;default           Active   46h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-node-lease   Active   46h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-public       Active   46h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;kube-system       Active   46h&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="MacNote" scheme="https://octopuslian.github.io/categories/MacNote/"/>
    
    
    <category term="kubernetes" scheme="https://octopuslian.github.io/tags/kubernetes/"/>
    
    <category term="mac" scheme="https://octopuslian.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装 Docker</title>
    <link href="https://octopuslian.github.io/2023/07/20/mac-install-docker/"/>
    <id>https://octopuslian.github.io/2023/07/20/mac-install-docker/</id>
    <published>2023-07-20T05:49:01.000Z</published>
    <updated>2023-07-23T06:38:48.871Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;安装-Docker-for-Mac&quot;&gt;&lt;a href=&quot;#安装-Docker-for-Mac&quot; class=&quot;headerlink&quot; title=&quot;安装 Docker for Mac&quot;&gt;&lt;/a&gt;安装 Docker for Mac&lt;/h1&gt;&lt;p&gt;访问&lt;a href=&quot;https://docs.docker.com/desktop/install/mac-install/&quot;&gt;https://docs.docker.com/desktop/install/mac-install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;下载.dmg文件后，拖拽到应用文件夹里即可。&lt;/p&gt;
&lt;h1 id=&quot;安装成功&quot;&gt;&lt;a href=&quot;#安装成功&quot; class=&quot;headerlink&quot; title=&quot;安装成功&quot;&gt;&lt;/a&gt;安装成功&lt;/h1&gt;&lt;p&gt;命令行输入&lt;/p&gt;</summary>
    
    
    
    <category term="MacNote" scheme="https://octopuslian.github.io/categories/MacNote/"/>
    
    
    <category term="docker" scheme="https://octopuslian.github.io/tags/docker/"/>
    
    <category term="mac" scheme="https://octopuslian.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装 Redis</title>
    <link href="https://octopuslian.github.io/2023/07/20/mac-install-redis/"/>
    <id>https://octopuslian.github.io/2023/07/20/mac-install-redis/</id>
    <published>2023-07-20T05:13:35.000Z</published>
    <updated>2023-07-23T06:31:37.795Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;brew安装&quot;&gt;&lt;a href=&quot;#brew安装&quot; class=&quot;headerlink&quot; title=&quot;brew安装&quot;&gt;&lt;/a&gt;brew安装&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install redis&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;h2 id=&quot;Could-not-connect-to-Redis-at-127-0-0-1-6379-Connection-refused&quot;&gt;&lt;a href=&quot;#Could-not-connect-to-Redis-at-127-0-0-1-6379-Connection-refused&quot; class=&quot;headerlink&quot; title=&quot;Could not connect to Redis at 127.0.0.1:6379: Connection refused&quot;&gt;&lt;/a&gt;Could not connect to Redis at 127.0.0.1:6379: Connection refused&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;redis-cli&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Could not connect to Redis at 127.0.0.1:6379: Connection refused not connected&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="MacNote" scheme="https://octopuslian.github.io/categories/MacNote/"/>
    
    
    <category term="redis" scheme="https://octopuslian.github.io/tags/redis/"/>
    
    <category term="mac" scheme="https://octopuslian.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Mac 安装 MySQL</title>
    <link href="https://octopuslian.github.io/2023/07/20/mac-install-mysql/"/>
    <id>https://octopuslian.github.io/2023/07/20/mac-install-mysql/</id>
    <published>2023-07-20T04:12:22.000Z</published>
    <updated>2023-07-20T05:12:40.500Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;brew命令安装&quot;&gt;&lt;a href=&quot;#brew命令安装&quot; class=&quot;headerlink&quot; title=&quot;brew命令安装&quot;&gt;&lt;/a&gt;brew命令安装&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;brew install mysql&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql --version&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h1 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h1&gt;&lt;h2 id=&quot;The-server-quit-without-updating-PID-file-x2F-opt-x2F-homebrew-x2F-var-x2F-mysql-x2F-neozhangdeMacBook-Pro-local-pid&quot;&gt;&lt;a href=&quot;#The-server-quit-without-updating-PID-file-x2F-opt-x2F-homebrew-x2F-var-x2F-mysql-x2F-neozhangdeMacBook-Pro-local-pid&quot; class=&quot;headerlink&quot; title=&quot;The server quit without updating PID file (&amp;#x2F;opt&amp;#x2F;homebrew&amp;#x2F;var&amp;#x2F;mysql&amp;#x2F;neozhangdeMacBook-Pro.local.pid)&quot;&gt;&lt;/a&gt;The server quit without updating PID file (&amp;#x2F;opt&amp;#x2F;homebrew&amp;#x2F;var&amp;#x2F;mysql&amp;#x2F;neozhangdeMacBook-Pro.local.pid)&lt;/h2&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo mysql.server start&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Password:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Starting MySQL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;.Logging to &amp;#x27;/opt/homebrew/var/mysql/neozhangdeMacBook-Pro.local.err&amp;#x27;.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ERROR! The server quit without updating PID file (/opt/homebrew/var/mysql/neozhangdeMacBook-Pro.local.pid).&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="MacNote" scheme="https://octopuslian.github.io/categories/MacNote/"/>
    
    
    <category term="mac" scheme="https://octopuslian.github.io/tags/mac/"/>
    
    <category term="MySQL" scheme="https://octopuslian.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>我的第一款MacBook Pro</title>
    <link href="https://octopuslian.github.io/2023/07/20/my-first-mbp/"/>
    <id>https://octopuslian.github.io/2023/07/20/my-first-mbp/</id>
    <published>2023-07-20T02:47:33.000Z</published>
    <updated>2023-07-20T04:12:03.569Z</updated>
    
    
    <summary type="html">&lt;p&gt;7月，终于下定决心给自己买一台MacBook Pro，购买的原因如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;之前笔记本电脑是装的Ubuntu 20.04 + Mac皮肤，编码没问题，但有时需要微信、Office办公套件的时候，会很麻烦，各种中转；&lt;/li&gt;
&lt;li&gt;Mac一直想买，但也一直下不定决心，有的人买来很实在，有的人买来是为了装逼 hhh；&lt;/li&gt;
&lt;li&gt;尝试做自媒体剪一些视频；  &lt;/li&gt;
&lt;li&gt;苹果软件生态丰富…&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;于是乎，开始看各种测评，官网看报价，最终决定上一款 M1 Max + 64G + 2T的配置，当然保险起见买了AC+。&lt;/p&gt;
&lt;p&gt;上手3天，觉得MacOS做的还是很细心的，运行软件基本都是秒开，硬件方面给我最大的感触就是屏幕+音响效果，非常棒，看视频有一种在电影院的感觉呢。&lt;/p&gt;
&lt;p&gt;软件的话我全部选择了JetBrains系列。&lt;/p&gt;</summary>
    
    
    
    <category term="MacNote" scheme="https://octopuslian.github.io/categories/MacNote/"/>
    
    
    <category term="电脑" scheme="https://octopuslian.github.io/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="mbp" scheme="https://octopuslian.github.io/tags/mbp/"/>
    
  </entry>
  
  <entry>
    <title>Github开源项目crawlergo介绍</title>
    <link href="https://octopuslian.github.io/2023/05/27/github-crawlergo-introduction/"/>
    <id>https://octopuslian.github.io/2023/05/27/github-crawlergo-introduction/</id>
    <published>2023-05-27T14:13:46.000Z</published>
    <updated>2023-05-29T07:59:54.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;整体介绍&quot;&gt;&lt;a href=&quot;#整体介绍&quot; class=&quot;headerlink&quot; title=&quot;整体介绍&quot;&gt;&lt;/a&gt;整体介绍&lt;/h1&gt;&lt;p&gt;&lt;code&gt;crawlergo&lt;/code&gt;是一个使用&lt;code&gt;chrome headless&lt;/code&gt;模式进行URL收集的浏览器爬虫。它对整个网页的关键位置与DOM渲染阶段进行HOOK，自动进行表单填充并提交，配合智能的JS事件触发，&lt;br&gt;尽可能的收集网站暴露出的入口。内置URL去重模块，过滤掉了大量伪静态URL，对于大型网站仍保持较快的解析与抓取速度，最后得到高质量的请求结果集合。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;crawlergo&lt;/code&gt;目前支持以下特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原生浏览器环境，协程池调度任务  &lt;/li&gt;
&lt;li&gt;表单智能填充、自动化提交  &lt;/li&gt;
&lt;li&gt;完整DOM事件收集，自动化触发  &lt;/li&gt;
&lt;li&gt;智能URL去重，去掉大部分的重复请求  &lt;/li&gt;
&lt;li&gt;全面分析收集，包括javascript文件内容、页面注释、robots.txt文件和常见路径Fuzz  &lt;/li&gt;
&lt;li&gt;支持Host绑定，自动添加Referer  &lt;/li&gt;
&lt;li&gt;支持请求代理，支持爬虫结果主动推送&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;项目整体结构：&lt;/p&gt;</summary>
    
    
    
    <category term="LearnCrawler" scheme="https://octopuslian.github.io/categories/LearnCrawler/"/>
    
    
    <category term="crawler" scheme="https://octopuslian.github.io/tags/crawler/"/>
    
  </entry>
  
  <entry>
    <title>爬虫基础-技术选型</title>
    <link href="https://octopuslian.github.io/2023/05/19/crawler-basic-technology-selection/"/>
    <id>https://octopuslian.github.io/2023/05/19/crawler-basic-technology-selection/</id>
    <published>2023-05-19T15:11:03.000Z</published>
    <updated>2023-05-27T04:05:24.000Z</updated>
    
    
      
      
        
        
    <summary type="html">&lt;h1 id=&quot;Scrapy-VS-requests-beautifulsoup&quot;&gt;&lt;a href=&quot;#Scrapy-VS-requests-beautifulsoup&quot; class=&quot;headerlink&quot; title=&quot;Scrapy VS</summary>
        
      
    
    
    
    <category term="LearnCrawler" scheme="https://octopuslian.github.io/categories/LearnCrawler/"/>
    
    
    <category term="爬虫" scheme="https://octopuslian.github.io/tags/%E7%88%AC%E8%99%AB/"/>
    
    <category term="Scrapy" scheme="https://octopuslian.github.io/tags/Scrapy/"/>
    
    <category term="requests" scheme="https://octopuslian.github.io/tags/requests/"/>
    
    <category term="beautifulsoup" scheme="https://octopuslian.github.io/tags/beautifulsoup/"/>
    
  </entry>
  
  <entry>
    <title>Go微服务框架go-micro v3快速入门</title>
    <link href="https://octopuslian.github.io/2023/03/07/go-micro-v3-quick-get-start/"/>
    <id>https://octopuslian.github.io/2023/03/07/go-micro-v3-quick-get-start/</id>
    <published>2023-03-07T07:41:27.000Z</published>
    <updated>2023-05-27T05:31:06.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;go-micro-v3和micro-v3是什么关系？&quot;&gt;&lt;a href=&quot;#go-micro-v3和micro-v3是什么关系？&quot; class=&quot;headerlink&quot; title=&quot;go-micro v3和micro v3是什么关系？&quot;&gt;&lt;/a&gt;go-micro v3和micro v3是什么关系？&lt;/h1&gt;&lt;h2 id=&quot;go-micro是什么？&quot;&gt;&lt;a href=&quot;#go-micro是什么？&quot; class=&quot;headerlink&quot; title=&quot;go-micro是什么？&quot;&gt;&lt;/a&gt;go-micro是什么？&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;一个go微服务开放框架  &lt;/li&gt;
&lt;li&gt;Framework（程序开放框架）：用来方便编写微服务  &lt;/li&gt;
&lt;li&gt;Clients（多语言客户端）：支持多语言访问服务端&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;go-micro-v3与micro-v3的关系&quot;&gt;&lt;a href=&quot;#go-micro-v3与micro-v3的关系&quot; class=&quot;headerlink&quot; title=&quot;go-micro v3与micro v3的关系&quot;&gt;&lt;/a&gt;go-micro v3与micro v3的关系&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;micro v3版本类似isito把基础设施抽象成能力  &lt;/li&gt;
&lt;li&gt;micro的技术体系和官方平台绑定较多  &lt;/li&gt;
&lt;li&gt;go-micro v3为微服务开发框架，自由度相对较高&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="LearnMicroservices" scheme="https://octopuslian.github.io/categories/LearnMicroservices/"/>
    
    
    <category term="微服务" scheme="https://octopuslian.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>网络编程基础</title>
    <link href="https://octopuslian.github.io/2023/03/01/network-programming-base/"/>
    <id>https://octopuslian.github.io/2023/03/01/network-programming-base/</id>
    <published>2023-03-01T07:59:10.000Z</published>
    <updated>2023-05-27T04:05:24.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;OSI七层网络协议&quot;&gt;&lt;a href=&quot;#OSI七层网络协议&quot; class=&quot;headerlink&quot; title=&quot;OSI七层网络协议&quot;&gt;&lt;/a&gt;OSI七层网络协议&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2023/03/01/network-programming-base/osi7.png&quot;&gt;  &lt;/p&gt;
&lt;h1 id=&quot;经典协议与数据包&quot;&gt;&lt;a href=&quot;#经典协议与数据包&quot; class=&quot;headerlink&quot; title=&quot;经典协议与数据包&quot;&gt;&lt;/a&gt;经典协议与数据包&lt;/h1&gt;&lt;h2 id=&quot;TCP数据包构成&quot;&gt;&lt;a href=&quot;#TCP数据包构成&quot; class=&quot;headerlink&quot; title=&quot;TCP数据包构成&quot;&gt;&lt;/a&gt;TCP数据包构成&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2023/03/01/network-programming-base/TCP%E6%95%B0%E6%8D%AE%E5%8C%85%E7%BB%93%E6%9E%84.png&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="LearnComputerNetwork" scheme="https://octopuslian.github.io/categories/LearnComputerNetwork/"/>
    
    
    <category term="编程" scheme="https://octopuslian.github.io/tags/%E7%BC%96%E7%A8%8B/"/>
    
    <category term="网络" scheme="https://octopuslian.github.io/tags/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="计算机" scheme="https://octopuslian.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>Go代码安全指南</title>
    <link href="https://octopuslian.github.io/2023/01/01/tencent-secguide-golang/"/>
    <id>https://octopuslian.github.io/2023/01/01/tencent-secguide-golang/</id>
    <published>2023-01-01T14:04:42.000Z</published>
    <updated>2023-01-01T06:08:36.000Z</updated>
    
    
    <summary type="html">&lt;!-- markdown=&quot;1&quot; is required for GitHub Pages to render the TOC properly. --&gt;

&lt;details markdown=&quot;1&quot;&gt;
  &lt;summary&gt;目录&lt;/summary&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#1&quot;&gt;1 通用类&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1.1&quot;&gt;I. 代码实现&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.1&quot;&gt;1.1 内存管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.2&quot;&gt;1.2 文件操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.3&quot;&gt;1.3 系统接口&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.4&quot;&gt;1.4 通信安全&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.5&quot;&gt;1.5 敏感数据保护&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.6&quot;&gt;1.6 加密解密&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1.1.7&quot;&gt;1.7 正则表达式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;#2&quot;&gt;2 后台类&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#2.1&quot;&gt;I. 代码实现&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.1&quot;&gt;1.1 输入校验&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.2&quot;&gt;1.2 SQL操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.3&quot;&gt;1.3 网络请求&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.4&quot;&gt;1.4 服务器端渲染&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.5&quot;&gt;1.5 Web跨域&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.6&quot;&gt;1.6 响应输出&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.7&quot;&gt;1.7 会话管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.8&quot;&gt;1.8 访问控制&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2.1.9&quot;&gt;1.9 并发保护&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/details&gt;





&lt;p&gt;&lt;a id=&quot;1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;通用类&quot;&gt;&lt;a href=&quot;#通用类&quot; class=&quot;headerlink&quot; title=&quot;通用类&quot;&gt;&lt;/a&gt;通用类&lt;/h1&gt;&lt;p&gt;&lt;a id=&quot;1.1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-代码实现类&quot;&gt;&lt;a href=&quot;#1-代码实现类&quot; class=&quot;headerlink&quot; title=&quot;1. 代码实现类&quot;&gt;&lt;/a&gt;1. 代码实现类&lt;/h2&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Go" scheme="https://octopuslian.github.io/tags/Go/"/>
    
    <category term="安全" scheme="https://octopuslian.github.io/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解sync包的正确用法</title>
    <link href="https://octopuslian.github.io/2022/10/09/book-go-programming-from-beginner-to-master-35/"/>
    <id>https://octopuslian.github.io/2022/10/09/book-go-programming-from-beginner-to-master-35/</id>
    <published>2022-10-09T07:49:34.000Z</published>
    <updated>2023-01-01T06:08:36.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;sync包还是channel&quot;&gt;&lt;a href=&quot;#sync包还是channel&quot; class=&quot;headerlink&quot; title=&quot;sync包还是channel&quot;&gt;&lt;/a&gt;sync包还是channel&lt;/h1&gt;&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cs = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 模拟临界区要保护的数据&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; mu sync.Mutex&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; c = &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&amp;#125;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;criticalSectionSyncByMutex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mu.Lock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cs++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	mu.Unlock()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;criticalSectionSyncByChan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	c &amp;lt;- &lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt;&amp;#123;&amp;#125;&amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	cs++&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;-c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BenchmarkCriticalSectionSyncByMutex&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(b *testing.B)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; n &amp;lt; b.N; n++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		criticalSectionSyncByMutex()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BenchmarkCriticalSectionSyncByChan&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(b *testing.B)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; n := &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; n &amp;lt; b.N; n++ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		criticalSectionSyncByChan()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;BenchmarkCriticalSectionSyncByMutex-8   	76766581	        15.41 ns/op&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;BenchmarkCriticalSectionSyncByChan-8   	    32243965	        37.59 ns/op&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h1 id=&quot;使用sync包的注意事项&quot;&gt;&lt;a href=&quot;#使用sync包的注意事项&quot; class=&quot;headerlink&quot; title=&quot;使用sync包的注意事项&quot;&gt;&lt;/a&gt;使用sync包的注意事项&lt;/h1&gt;&lt;p&gt;在&lt;code&gt;sync&lt;/code&gt;包源文件中，我们看到以下注释：  &lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// A Mutex must not be copied after first use.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// A RWMutex must not be copied after first use.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// A Cond must not be copied after first use.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="sync包" scheme="https://octopuslian.github.io/tags/sync%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——优先考虑并发设计</title>
    <link href="https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-31/"/>
    <id>https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-31/</id>
    <published>2022-10-08T06:12:18.000Z</published>
    <updated>2022-10-08T04:31:12.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;并发与并行&quot;&gt;&lt;a href=&quot;#并发与并行&quot; class=&quot;headerlink&quot; title=&quot;并发与并行&quot;&gt;&lt;/a&gt;并发与并行&lt;/h1&gt;&lt;h2 id=&quot;并行方案&quot;&gt;&lt;a href=&quot;#并行方案&quot; class=&quot;headerlink&quot; title=&quot;并行方案&quot;&gt;&lt;/a&gt;并行方案&lt;/h2&gt;&lt;p&gt;在处理器核数充足的情况下启动多个单线程应用的实例，这样每个实例运行在一个核上，尽可能多地利用多核计算资源。  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/10/08/book-go-programming-from-beginner-to-master-31/%E5%8D%95%E8%BF%9B%E7%A8%8B.png&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/10/08/book-go-programming-from-beginner-to-master-31/%E5%A4%9A%E8%BF%9B%E7%A8%8B.png&quot;&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="并发" scheme="https://octopuslian.github.io/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——使用defer让函数更简洁、更健壮</title>
    <link href="https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-22/"/>
    <id>https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-22/</id>
    <published>2022-10-08T05:10:26.000Z</published>
    <updated>2022-10-08T04:31:12.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;defer的运作机制&quot;&gt;&lt;a href=&quot;#defer的运作机制&quot; class=&quot;headerlink&quot; title=&quot;defer的运作机制&quot;&gt;&lt;/a&gt;defer的运作机制&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;在 Go 中，只有在函数（和方法）内部才能使用 defer；  &lt;/li&gt;
&lt;li&gt;defer 关键字后面只能接函数（或方法），这些函数被称为deferred 函数。defer 将它们注册到其所在 Goroutine 中，用于存放 deferred 函数的栈数据结构中，这些deferred 函数将在执行 defer 的函数退出前，按后进先出（LIFO）的顺序被程序调度执行：&lt;br&gt;&lt;img src=&quot;/2022/10/08/book-go-programming-from-beginner-to-master-22/defer1.png&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;defer的常见用法&quot;&gt;&lt;a href=&quot;#defer的常见用法&quot; class=&quot;headerlink&quot; title=&quot;defer的常见用法&quot;&gt;&lt;/a&gt;defer的常见用法&lt;/h1&gt;&lt;h2 id=&quot;拦截panic&quot;&gt;&lt;a href=&quot;#拦截panic&quot; class=&quot;headerlink&quot; title=&quot;拦截panic&quot;&gt;&lt;/a&gt;拦截panic&lt;/h2&gt;&lt;p&gt;按需要对&lt;code&gt;panic&lt;/code&gt;进行处理，可以尝试从&lt;code&gt;panic&lt;/code&gt;中恢复。  &lt;/p&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="defer" scheme="https://octopuslian.github.io/tags/defer/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解string实现原理并高效使用</title>
    <link href="https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-15/"/>
    <id>https://octopuslian.github.io/2022/10/08/book-go-programming-from-beginner-to-master-15/</id>
    <published>2022-10-08T04:35:31.000Z</published>
    <updated>2022-10-08T04:31:12.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;Go语言的字符串类型&quot;&gt;&lt;a href=&quot;#Go语言的字符串类型&quot; class=&quot;headerlink&quot; title=&quot;Go语言的字符串类型&quot;&gt;&lt;/a&gt;Go语言的字符串类型&lt;/h1&gt;&lt;p&gt;统一设置为&lt;code&gt;string&lt;/code&gt;：  &lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	s = &lt;span class=&quot;string&quot;&gt;&amp;quot;string constant&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s1 &lt;span class=&quot;type&quot;&gt;string&lt;/span&gt; = &lt;span class=&quot;string&quot;&gt;&amp;quot;string variable&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&amp;quot;%T\n&amp;quot;&lt;/span&gt;, s)                          &lt;span class=&quot;comment&quot;&gt;// string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&amp;quot;%T\n&amp;quot;&lt;/span&gt;, s1)                         &lt;span class=&quot;comment&quot;&gt;// string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	fmt.Printf(&lt;span class=&quot;string&quot;&gt;&amp;quot;%T\n&amp;quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&amp;quot;temporary string literal&amp;quot;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// string&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;功能特点：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;string类型的数据是不可变的；  &lt;/li&gt;
&lt;li&gt;零值可用；  &lt;/li&gt;
&lt;li&gt;获取长度的时间复杂度是O(1)级别  &lt;/li&gt;
&lt;li&gt;支持通过 +&amp;#x2F;+&amp;#x3D; 操作符进行字符串连接  &lt;/li&gt;
&lt;li&gt;支持各种比较关系操作符：&amp;#x3D;&amp;#x3D;、!&amp;#x3D;、&amp;gt;&amp;#x3D;、&amp;lt;&amp;#x3D;、&amp;lt;、&amp;gt;  &lt;/li&gt;
&lt;li&gt;对非ASCII字符提供原生支持  &lt;/li&gt;
&lt;li&gt;原生支持多行字符串&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="string" scheme="https://octopuslian.github.io/tags/string/"/>
    
    <category term="字符串" scheme="https://octopuslian.github.io/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解map原理并高效使用</title>
    <link href="https://octopuslian.github.io/2022/10/07/book-go-programming-from-beginner-to-master-14/"/>
    <id>https://octopuslian.github.io/2022/10/07/book-go-programming-from-beginner-to-master-14/</id>
    <published>2022-10-07T14:51:12.000Z</published>
    <updated>2022-10-06T20:13:28.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是Map&quot;&gt;&lt;a href=&quot;#什么是Map&quot; class=&quot;headerlink&quot; title=&quot;什么是Map&quot;&gt;&lt;/a&gt;什么是Map&lt;/h1&gt;&lt;p&gt;map 是 Go 语言提供的一种抽象数据类型，它表示一组无序的键值对。  &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/2022/10/07/book-go-programming-from-beginner-to-master-14/map1.png&quot;&gt;  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt;的声明：  &lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;map&lt;/span&gt;[key_type]value_type&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="map" scheme="https://octopuslian.github.io/tags/map/"/>
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解切片原理并高效使用</title>
    <link href="https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-13/"/>
    <id>https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-13/</id>
    <published>2022-10-06T14:51:07.000Z</published>
    <updated>2022-10-06T20:13:28.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是数组&quot;&gt;&lt;a href=&quot;#什么是数组&quot; class=&quot;headerlink&quot; title=&quot;什么是数组&quot;&gt;&lt;/a&gt;什么是数组&lt;/h1&gt;&lt;h2 id=&quot;数组有哪些基本特性&quot;&gt;&lt;a href=&quot;#数组有哪些基本特性&quot; class=&quot;headerlink&quot; title=&quot;数组有哪些基本特性&quot;&gt;&lt;/a&gt;数组有哪些基本特性&lt;/h2&gt;&lt;p&gt;Go 语言的数组是一个长度固定的、由同构类型元素组成的连续序列。&lt;br&gt;因此Go 的数组类型包含两个重要属性：元素的类型和数组长度（元素的个数）。&lt;br&gt;所以，Go 语言中数组类型变量的声明：  &lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; arr [N]T &lt;span class=&quot;comment&quot;&gt;//声明了一个数组变量 arr，它的类型为[N]T，其中元素的类型为 T，数组的长度为N。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;通过声明，我们可以得出一个结论：&lt;strong&gt;如果两个数组类型的元素类型 T 与数组长度 N 都是一样的，那么这两个数组类型是等价的，如果有一个属性不同，它们就是两个不同的数组类型。&lt;/strong&gt;  &lt;/p&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="切片" scheme="https://octopuslian.github.io/tags/%E5%88%87%E7%89%87/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解channel的妙用</title>
    <link href="https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-34/"/>
    <id>https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-34/</id>
    <published>2022-10-06T14:01:37.000Z</published>
    <updated>2022-10-07T23:51:00.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是channel&quot;&gt;&lt;a href=&quot;#什么是channel&quot; class=&quot;headerlink&quot; title=&quot;什么是channel&quot;&gt;&lt;/a&gt;什么是channel&lt;/h1&gt;&lt;p&gt;&lt;code&gt;channel&lt;/code&gt;是Go语言提供的一种重要的并发原语。它在Go语言的&lt;code&gt;CSP&lt;/code&gt;模型中扮演者重要的角色：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以实现&lt;code&gt;goroutine&lt;/code&gt;之间的通信；  &lt;/li&gt;
&lt;li&gt;可以实现&lt;code&gt;goroutine&lt;/code&gt;之间的同步。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;channel&lt;/code&gt;原语的使用：  &lt;/p&gt;
&lt;figure class=&quot;highlight go&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;// 创建一个无缓冲的int类型的channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;// 创建一个带缓冲的int类型的channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c &amp;lt;- x  &lt;span class=&quot;comment&quot;&gt;// 向channel c 中发送一个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;- c    &lt;span class=&quot;comment&quot;&gt;// 从channel c 中接收一个值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x = &amp;lt;- c  &lt;span class=&quot;comment&quot;&gt;// 从channel c 接收一个值并将其存储到变量x中&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;x,ok = &amp;lt;- c  &lt;span class=&quot;comment&quot;&gt;// 从channel c 接收一个值。若channel关闭了，ok将被置为false&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i := &lt;span class=&quot;keyword&quot;&gt;range&lt;/span&gt; c &amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;close&lt;/span&gt;(c)  &lt;span class=&quot;comment&quot;&gt;// 关闭channel c&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;c := &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;int&lt;/span&gt;)  &lt;span class=&quot;comment&quot;&gt;// 创建一个无缓冲的chan int类型的channel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(ctx context.Context, out &lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt;&amp;lt;- Value)&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;error&lt;/span&gt;  &lt;span class=&quot;comment&quot;&gt;// 将只发送channel作为函数参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;spwn&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(...)&lt;/span&gt;&lt;/span&gt; &amp;lt;-&lt;span class=&quot;keyword&quot;&gt;chan&lt;/span&gt; T  &lt;span class=&quot;comment&quot;&gt;// 将只接收类型channel作为返回值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="channel" scheme="https://octopuslian.github.io/tags/channel/"/>
    
  </entry>
  
  <entry>
    <title>Go语言精进——了解goroutine的调度原理</title>
    <link href="https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-32/"/>
    <id>https://octopuslian.github.io/2022/10/06/book-go-programming-from-beginner-to-master-32/</id>
    <published>2022-10-06T13:45:16.000Z</published>
    <updated>2022-10-07T23:22:20.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是goroutine&quot;&gt;&lt;a href=&quot;#什么是goroutine&quot; class=&quot;headerlink&quot; title=&quot;什么是goroutine&quot;&gt;&lt;/a&gt;什么是goroutine&lt;/h1&gt;&lt;p&gt;&lt;code&gt;goroutine&lt;/code&gt;是由Go运行时管理的用户层轻量级线程。  &lt;/p&gt;
&lt;p&gt;相比较于操作系统线程，&lt;code&gt;goroutine&lt;/code&gt;的资源占用和使用代价都要小得多，可以创建几十个、几百个甚至成千上万个&lt;code&gt;goroutine&lt;/code&gt;也不会造成系统资源的枯竭，&lt;code&gt;Go&lt;/code&gt;的运行时负责对&lt;code&gt;goroutine&lt;/code&gt;进行管理。而所谓的管理 &amp;#x3D;&amp;#x3D; 调度。  &lt;/p&gt;
&lt;h1 id=&quot;goroutine调度器&quot;&gt;&lt;a href=&quot;#goroutine调度器&quot; class=&quot;headerlink&quot; title=&quot;goroutine调度器&quot;&gt;&lt;/a&gt;goroutine调度器&lt;/h1&gt;&lt;p&gt;一个Go程序中可以创建成千上万个并发的&lt;code&gt;goroutine&lt;/code&gt;，而将这些&lt;code&gt;goroutine&lt;/code&gt;按照一定算法放到CPU上执行的程序就称为&lt;strong&gt;goroutine调度器&lt;/strong&gt;。  &lt;/p&gt;</summary>
    
    
    
    <category term="LearnGo" scheme="https://octopuslian.github.io/categories/LearnGo/"/>
    
    
    <category term="Golang" scheme="https://octopuslian.github.io/tags/Golang/"/>
    
    <category term="goroutine" scheme="https://octopuslian.github.io/tags/goroutine/"/>
    
  </entry>
  
  <entry>
    <title>剑指 Offer 52. 两个链表的第一个公共节点</title>
    <link href="https://octopuslian.github.io/2022/10/06/leetcode-lcof-52-liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian/"/>
    <id>https://octopuslian.github.io/2022/10/06/leetcode-lcof-52-liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian/</id>
    <published>2022-10-06T07:52:21.000Z</published>
    <updated>2022-10-06T00:02:44.000Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode.cn/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/&quot;&gt;剑指 Offer 52. 两个链表的第一个公共节点&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;和判断两个链表是否相交类似。  &lt;/p&gt;
&lt;h1 id=&quot;题解&quot;&gt;&lt;a href=&quot;#题解&quot; class=&quot;headerlink&quot; title=&quot;题解&quot;&gt;&lt;/a&gt;题解&lt;/h1&gt;&lt;h2 id=&quot;暴力&quot;&gt;&lt;a href=&quot;#暴力&quot; class=&quot;headerlink&quot; title=&quot;暴力&quot;&gt;&lt;/a&gt;暴力&lt;/h2&gt;</summary>
    
    
    
    <category term="SwordToOffer" scheme="https://octopuslian.github.io/categories/SwordToOffer/"/>
    
    
    <category term="链表" scheme="https://octopuslian.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
</feed>
